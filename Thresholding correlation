import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.linear_model import LassoCV
from sklearn.feature_selection import SelectFromModel, VarianceThreshold
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report
from sklearn.datasets import load_breast_cancer
from sklearn.ensemble import RandomForestClassifier

cancer = load_breast_cancer()
X, y = cancer.data, cancer.target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

lasso_cv = LassoCV(cv=5)
lasso_cv.fit(X_train, y_train)

sfm = SelectFromModel(lasso_cv, prefit=True)
X_train_selected = sfm.transform(X_train)
X_test_selected = sfm.transform(X_test)

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train_selected, y_train)

y_pred = model.predict(X_test_selected)
print("Classification Report:\n", classification_report(y_test, y_pred))

selected_feature_indices = np.where(sfm.get_support())[0]
selected_features = cancer.feature_names[selected_feature_indices]
coefficients = lasso_cv.coef_

print("Selected Features:", selected_features)
print("Feature Coefficients:", coefficients[selected_feature_indices])

print("\nApplying Variance Thresholding...")
vt = VarianceThreshold(threshold=0.01)
X_vt = vt.fit_transform(X)
print("Shape before:", X.shape)
print("Shape after Variance Thresholding:", X_vt.shape)

df = pd.DataFrame(X, columns=cancer.feature_names)
corr = df.corr()
plt.figure(figsize=(12, 10))
sns.heatmap(corr, annot=False, cmap='coolwarm', linewidths=0.5)
plt.title("Feature Correlation Heatmap")
plt.show()

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report, accuracy_score, f1_score

%matplotlib inline

df = pd.read_csv("churn.csv")
print("Columns:", df.columns.tolist())
print(df.head())

for col in ['customer_id', 'credit_card', 'age']:
    if col in df.columns:
        df.drop(col, axis=1, inplace=True)

print(df.info())
print("Missing values:\n", df.isna().sum())
print(df.describe())

numcols = ['credit_score', 'tenure', 'balance']
fig, ax = plt.subplots(3, 1, figsize=(10, 15))
for col, subplot in zip(numcols, ax):
    if col in df.columns:
        sns.boxplot(x="gender", y=col, data=df, ax=subplot)
plt.tight_layout()
plt.show()

for col in numcols:
    if col in df.columns:
        q75, q25 = np.percentile(df[col], [75, 25])
        iqr = q75 - q25
        min_val, max_val = q25 - 1.5 * iqr, q75 + 1.5 * iqr
        df = df[(df[col] >= min_val) & (df[col] <= max_val)]

fig, ax = plt.subplots(3, 1, figsize=(15, 15))
for col, subplot in zip(numcols, ax):
    if col in df.columns and 'country' in df.columns:
        sns.boxplot(x='country', y=col, data=df, ax=subplot)
plt.tight_layout()
plt.show()

le = LabelEncoder()
for col in ['country', 'gender']:
    if col in df.columns:
        df[col] = le.fit_transform(df[col])
print(df.head())

if 'credit_score' not in df.columns:
    raise KeyError("'credit_score' column missing.")
X = df.drop('credit_score', axis=1)
y = df['credit_score']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)
dtree = DecisionTreeClassifier().fit(X_train, y_train)
preds = dtree.predict(X_test)

print("\nClassification Report:\n", classification_report(y_test, preds))
print("Accuracy: %.2f" % accuracy_score(y_test, preds))
print("F1 Score: %.2f" % f1_score(y_test, preds, average='weighted'))
